#ifndef ROBOHOCKEY_LAYER_DATAANALYSIS_CAMERATEST_H
#define ROBOHOCKEY_LAYER_DATAANALYSIS_CAMERATEST_H

#include <cppunit/TestFixture.h>
#include <cppunit/extensions/HelperMacros.h>

namespace RoboHockey
{
namespace Layer
{
namespace DataAnalysis
{
	class CameraTest :
			public CPPUNIT_NS::TestFixture
	{
		CPPUNIT_TEST_SUITE(CameraTest);
		CPPUNIT_TEST(getProbabilityForYellowGoal_yellowGoal_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForYellowGoal_blueGoal_resultIsNear0);
		CPPUNIT_TEST(getProbabilityForBlueGoal_blueGoal_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForBlueGoal_yellowGoal_resultIsNear0);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwice_cameraObjectsCountIs2);
		CPPUNIT_TEST(getAllCameraObjects_yellowAndBluePuck_cameraObjectsCountIs2);
		CPPUNIT_TEST(getAllCameraObjects_nothing_cameraObjectCountIs0);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuck_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_bluePuck_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_blueGoal_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_yellowGoal_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_yellowGoal1_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstone_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstone1_cameraObjectCountIs1);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstoneTriple_cameraObjectCountIs3);
		CPPUNIT_TEST(getAllCameraObjects_yellowAndBluePuckAndGreenBorderstone_cameraObjectsCountIs3);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwiceAndGreenBorderstone_cameraObjectsCountIs3);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwiceAndGreenBorderstone1_cameraObjectsCountIs3);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuck_cameraObjectPositonIs0p6And0p1);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwice_cameraObjectPositonOfRightObjectIs0p6And0p0);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwice_cameraObjectPositonOfLeftObjectIs0p7And0p2);
		CPPUNIT_TEST(getAllCameraObjects_bluePuck_cameraObjectPositonIs0p5AndMinus0p1);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstone_cameraObjectPositonIs0p5AndMinus0p2);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstoneTriple1_cameraObjectCountIs3);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstoneTriple1_cameraObjectPositonOfLeftObjectIs0p8And0p2);
		CPPUNIT_TEST(getAllCameraObjects_greenBorderstoneTriple1_cameraObjectPositonOfObjectInTheMiddleIs0p7And0p05);
		CPPUNIT_TEST(getAllCameraObjects_yellowPuckTwiceAndRobotAt1And1AndHalfPi_cameraObjectPositonOfRightObjectIs1p0And1p6);
		CPPUNIT_TEST(getAllCameraObjects_camera2211_cameraObjectCountIs2);
		CPPUNIT_TEST(getAllCameraObjects_realWorldExampleData_timeIsBelow100ms);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_bluePuckCollectedLeft_resultIsNear0);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedLeft_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedLeftSecondVersion_resultIsOver65Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_bluePuckCollectedRight_resultIsNear0);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedRight_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedRightSecondVersion_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_bluePuckCollectedInYellowGoal_resultIsUnder10Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedInBlueGoal_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedYellowPuck_yellowPuckCollectedInBlueGoalSecondVersion_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_bluePuckCollectedLeft_resultIsOver59Percent);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_yellowPuckCollectedLeft_resultIsNear0);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_bluePuckCollectedRight_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_yellowPuckCollectedRight_resultIsNear0);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_bluePuckCollectedInYellowGoal_resultIsOver80Percent);
		CPPUNIT_TEST(getProbabilityForCollectedBluePuck_yellowPuckCollectedInBlueGoal_resultIsUnder10Percent);
		CPPUNIT_TEST(getAllCameraObjects_realWorldTest_colorIsYellow);
		CPPUNIT_TEST(getAllCameraObjects_realWorldTest_cameraObjectCountIs1);
		CPPUNIT_TEST_SUITE_END();

	private:
		void getProbabilityForYellowGoal_yellowGoal_resultIsOver80Percent();
		void getProbabilityForYellowGoal_blueGoal_resultIsNear0();
		void getProbabilityForBlueGoal_blueGoal_resultIsOver80Percent();
		void getProbabilityForBlueGoal_yellowGoal_resultIsNear0();
		void getAllCameraObjects_yellowPuckTwice_cameraObjectsCountIs2();
		void getAllCameraObjects_yellowAndBluePuck_cameraObjectsCountIs2();
		void getAllCameraObjects_nothing_cameraObjectCountIs0();
		void getAllCameraObjects_yellowPuck_cameraObjectCountIs1();
		void getAllCameraObjects_bluePuck_cameraObjectCountIs1();
		void getAllCameraObjects_blueGoal_cameraObjectCountIs1();
		void getAllCameraObjects_yellowGoal_cameraObjectCountIs1();
		void getAllCameraObjects_yellowGoal1_cameraObjectCountIs1();
		void getAllCameraObjects_greenBorderstone_cameraObjectCountIs1();
		void getAllCameraObjects_greenBorderstone1_cameraObjectCountIs1();
		void getAllCameraObjects_greenBorderstoneTriple_cameraObjectCountIs3();
		void getAllCameraObjects_yellowAndBluePuckAndGreenBorderstone_cameraObjectsCountIs3();
		void getAllCameraObjects_yellowPuckTwiceAndGreenBorderstone_cameraObjectsCountIs3();
		void getAllCameraObjects_yellowPuckTwiceAndGreenBorderstone1_cameraObjectsCountIs3();
		void getAllCameraObjects_yellowPuck_cameraObjectPositonIs0p6And0p1();
		void getAllCameraObjects_yellowPuckTwice_cameraObjectPositonOfRightObjectIs0p6And0p0();
		void getAllCameraObjects_yellowPuckTwice_cameraObjectPositonOfLeftObjectIs0p7And0p2();
		void getAllCameraObjects_bluePuck_cameraObjectPositonIs0p5AndMinus0p1();
		void getAllCameraObjects_greenBorderstone_cameraObjectPositonIs0p5AndMinus0p2();
		void getAllCameraObjects_greenBorderstoneTriple1_cameraObjectCountIs3();
		void getAllCameraObjects_greenBorderstoneTriple1_cameraObjectPositonOfLeftObjectIs0p8And0p2();
		void getAllCameraObjects_greenBorderstoneTriple1_cameraObjectPositonOfObjectInTheMiddleIs0p7And0p05();
		void getAllCameraObjects_yellowPuckTwiceAndRobotAt1And1AndHalfPi_cameraObjectPositonOfRightObjectIs1p0And1p6();
		void getAllCameraObjects_camera2211_cameraObjectCountIs2();
		void getAllCameraObjects_realWorldExampleData_timeIsBelow100ms();
		void getProbabilityForCollectedYellowPuck_bluePuckCollectedLeft_resultIsNear0();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedLeft_resultIsOver80Percent();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedLeftSecondVersion_resultIsOver65Percent();
		void getProbabilityForCollectedYellowPuck_bluePuckCollectedRight_resultIsNear0();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedRight_resultIsOver80Percent();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedRightSecondVersion_resultIsOver80Percent();
		void getProbabilityForCollectedYellowPuck_bluePuckCollectedInYellowGoal_resultIsUnder10Percent();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedInBlueGoal_resultIsOver80Percent();
		void getProbabilityForCollectedYellowPuck_yellowPuckCollectedInBlueGoalSecondVersion_resultIsOver80Percent();
		void getProbabilityForCollectedBluePuck_bluePuckCollectedLeft_resultIsOver59Percent();
		void getProbabilityForCollectedBluePuck_yellowPuckCollectedLeft_resultIsNear0();
		void getProbabilityForCollectedBluePuck_bluePuckCollectedRight_resultIsOver80Percent();
		void getProbabilityForCollectedBluePuck_yellowPuckCollectedRight_resultIsNear0();
		void getProbabilityForCollectedBluePuck_bluePuckCollectedInYellowGoal_resultIsOver80Percent();
		void getProbabilityForCollectedBluePuck_yellowPuckCollectedInBlueGoal_resultIsUnder10Percent();
		void getAllCameraObjects_realWorldTest_colorIsYellow();
		void getAllCameraObjects_realWorldTest_cameraObjectCountIs1();

	};
}
}
}

#endif
